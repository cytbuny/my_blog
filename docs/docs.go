// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "获取登录信息",
                "parameters": [
                    {
                        "type": "string",
                        "default": "jwt",
                        "description": "凭证jwt",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/api/cate/add": {
            "post": {
                "tags": [
                    "分类"
                ],
                "summary": "添加分类",
                "parameters": [
                    {
                        "description": "分类 struct",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Cate"
                        }
                    },
                    {
                        "type": "string",
                        "default": "jwt",
                        "description": "凭证jwt",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/api/cate/all": {
            "get": {
                "tags": [
                    "分类"
                ],
                "summary": "所有分类",
                "parameters": [
                    {
                        "type": "string",
                        "default": "jwt",
                        "description": "凭证jwt",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/api/cate/drop/{id}": {
            "get": {
                "tags": [
                    "分类"
                ],
                "summary": "删除分类",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "id-分类",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "jwt",
                        "description": "凭证jwt",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/api/cate/edit": {
            "post": {
                "tags": [
                    "分类"
                ],
                "summary": "修改分类",
                "parameters": [
                    {
                        "description": "分类 struct",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Cate"
                        }
                    },
                    {
                        "type": "string",
                        "default": "jwt",
                        "description": "凭证jwt",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/api/cate/post/{cid}": {
            "get": {
                "tags": [
                    "分类"
                ],
                "summary": "分类文章列表",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "分类id",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "分页页数pi",
                        "name": "pi",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 6,
                        "description": "分页大小ps",
                        "name": "ps",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "jwt",
                        "description": "凭证jwt",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "登陆",
                "parameters": [
                    {
                        "type": "string",
                        "default": "super",
                        "description": "账号",
                        "name": "num",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "123654",
                        "description": "密码",
                        "name": "passwd",
                        "in": "formData",
                        "required": true
                    }
                ]
            }
        },
        "/api/user/edit/self": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "修改个人信息",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "id-自动获取",
                        "name": "id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "''",
                        "description": "名称",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "''",
                        "description": "号码",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "''",
                        "description": "邮箱",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    }
                ]
            }
        },
        "/api/user/pass": {
            "post": {
                "tags": [
                    "用户"
                ],
                "summary": "修改自己的密码",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "id-自动获取",
                        "name": "id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "''",
                        "description": "旧密码",
                        "name": "opass",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "''",
                        "description": "新密码",
                        "name": "npass",
                        "in": "formData",
                        "required": true
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "登陆",
                "parameters": [
                    {
                        "type": "string",
                        "default": "super",
                        "description": "账号",
                        "name": "num",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "123654",
                        "description": "密码",
                        "name": "pass",
                        "in": "formData",
                        "required": true
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "注销"
            }
        },
        "/user/exist/{num}": {
            "get": {
                "tags": [
                    "用户"
                ],
                "summary": "判断当前用户账号是否存在",
                "parameters": [
                    {
                        "type": "string",
                        "default": "''",
                        "description": "用户账号",
                        "name": "num",
                        "in": "path",
                        "required": true
                    }
                ]
            }
        }
    },
    "definitions": {
        "model.Cate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "intro": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pid": {
                    "type": "integer"
                }
            }
        },
        "model.Opts": {
            "type": "object",
            "properties": {
                "intro": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.Page": {
            "type": "object",
            "properties": {
                "mult": {
                    "description": "多条件信息",
                    "type": "string"
                },
                "pi": {
                    "description": "分页页码",
                    "type": "integer"
                },
                "ps": {
                    "description": "分页大小",
                    "type": "integer"
                }
            }
        },
        "model.Post": {
            "type": "object",
            "properties": {
                "allow_comment": {
                    "type": "boolean"
                },
                "cate": {
                    "type": "object",
                    "$ref": "#/definitions/model.Cate"
                },
                "cate_id": {
                    "type": "integer"
                },
                "comment_num": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "create_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_public": {
                    "type": "boolean"
                },
                "markdown_content": {
                    "type": "string"
                },
                "options": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "update_time": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.PostTag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "post": {
                    "type": "object",
                    "$ref": "#/definitions/model.Post"
                },
                "post_id": {
                    "type": "integer"
                },
                "tag": {
                    "type": "object",
                    "$ref": "#/definitions/model.Tag"
                },
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "model.Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "intro": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "ctime": {
                    "type": "string"
                },
                "ecount": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "ltime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "num": {
                    "type": "string"
                },
                "pass": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "127.0.0.1:88",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "Blog’s Api文档",
	Description: "token传递方式包括 [get/post]token 、[header] Authorization=Bearer xxxx\n数据传递方式包括 json、formData 推荐使用 json\n/api/* 公共访问\n/adm/* 必须传入 token",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
